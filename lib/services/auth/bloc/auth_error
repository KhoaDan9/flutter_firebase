// import 'package:firebase/services/auth/auth_user.dart';
// import 'package:flutter/foundation.dart';
// import 'package:equatable/equatable.dart';

// @immutable
// abstract class AuthState {
//   final bool isLoading;
//   final String? loadingText;
//   const AuthState({
//     required this.isLoading,
//     this.loadingText = 'Please wait a moment...',
//   });
// }

// class AuthStateUninitialized extends AuthState {
//   const AuthStateUninitialized({required super.isLoading});
// }

// class AuthStateLoggedIn extends AuthState {
//   final AuthUser user;
//   const AuthStateLoggedIn({required this.user, required super.isLoading});
// }

// class AuthStateRegister extends AuthState {
//   const AuthStateRegister({required super.isLoading});
// }

// class AuthStateNeedVerify extends AuthState {
//   const AuthStateNeedVerify({required super.isLoading});
// }

// class AuthStateRegistering extends AuthState {
//   final Exception? exception;
//   const AuthStateRegistering(
//       {required this.exception, required super.isLoading});
// }

// class AuthStateLogout extends AuthState with EquatableMixin {
//   final Exception? exception;
//   @override
//   const AuthStateLogout(
//       {required this.exception, required super.isLoading, super.loadingText});

//   @override
//   List<Object?> get props => [exception, isLoading];
// }
